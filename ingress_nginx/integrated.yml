---
apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx-system
  labels:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/component: controller
  name: ingress-nginx-system
  namespace: ingress-nginx-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingress-nginx-system-admission
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/component: admission-webhook
  namespace: ingress-nginx-system
---
apiVersion: v1
kind: Secret
metadata:
  name: ingress-nginx-system-admission-token
  namespace: ingress-nginx-system
  annotations:
    kubernetes.io/service-account.name: ingress-nginx-system-admission
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: Secret
metadata:
  name: ingress-nginx-system-token
  namespace: ingress-nginx-system
  annotations:
    kubernetes.io/service-account.name: ingress-nginx-system
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/component: controller
  name: ingress-nginx-system
  namespace: ingress-nginx-system
rules:
  - apiGroups:
      - ''
    resources:
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ''
    resources:
      - configmaps
      - pods
      - secrets
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - services
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io   # k8s 1.14+
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io   # k8s 1.14+
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io   # k8s 1.14+
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - configmaps
    resourceNames:
      - ingress-controller-leader-nginx-system
    verbs:
      - get
      - update
  - apiGroups:
      - ''
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ''
    resources:
      - endpoints
    verbs:
      - create
      - get
      - update
  - apiGroups:
      - ''
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ingress-nginx-system-admission
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/component: admission-webhook
  namespace: ingress-nginx-system
rules:
  - apiGroups:
      - ''
    resources:
      - secrets
    verbs:
      - get
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
  name: ingress-nginx-system
rules:
  - apiGroups:
      - ''
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ''
    resources:
      - services
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io   # k8s 1.14+
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - extensions
      - networking.k8s.io   # k8s 1.14+
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io   # k8s 1.14+
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ingress-nginx-system-admission
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/component: admission-webhook
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
    verbs:
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/component: controller
  name: ingress-nginx-system
  namespace: ingress-nginx-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-system
subjects:
  - kind: ServiceAccount
    name: ingress-nginx-system
    namespace: ingress-nginx-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ingress-nginx-system-admission
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/component: admission-webhook
  namespace: ingress-nginx-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-system-admission
subjects:
  - kind: ServiceAccount
    name: ingress-nginx-system-admission
    namespace: ingress-nginx-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
  name: ingress-nginx-system
  namespace: ingress-nginx-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-system
subjects:
  - kind: ServiceAccount
    name: ingress-nginx-system
    namespace: ingress-nginx-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-nginx-system-admission
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/component: admission-webhook
  namespace: ingress-nginx-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-system-admission
subjects:
  - kind: ServiceAccount
    name: ingress-nginx-system-admission
    namespace: ingress-nginx-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/component: controller
  name: ingress-nginx-system-controller
  namespace: ingress-nginx-system
data:
    proxy-buffer-size: 128k
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tcp-services
  namespace: ingress-nginx-system
  labels:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/part-of: ingress-nginx-system
data:
  9001: "hyperauth/kafka-1:9093"
  9002: "hyperauth/kafka-2:9093"
  9003: "hyperauth/kafka-3:9093"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/component: controller
  name: ingress-nginx-system-controller-admission
  namespace: ingress-nginx-system
spec:
  type: ClusterIP
  ports:
    - name: https-webhook
      port: 443
      targetPort: webhook
  selector:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/component: controller
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/component: controller
  name: ingress-nginx-system-controller
  namespace: ingress-nginx-system
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
      nodePort: 30080
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
      nodePort: 30443
    - name: kafka-1
      port: 9001
      protocol: TCP
    - name: kafka-2
      port: 9002
      protocol: TCP
    - name: kafka-3
      port: 9003
      protocol: TCP
  selector:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/component: controller
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ingress-nginx-system-admission-create
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/component: admission-webhook
  namespace: ingress-nginx-system
spec:
  template:
    metadata:
      name: ingress-nginx-system-admission-create
      labels:
        app.kubernetes.io/name: ingress-nginx-system
        app.kubernetes.io/instance: ingress-nginx-system
        app.kubernetes.io/component: admission-webhook
    spec:
      containers:
        - name: create
          image: docker.io/jettech/kube-webhook-certgen:v1.2.2
          volumeMounts:
          - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            name: ingress-nginx-system-admission-token

          imagePullPolicy: IfNotPresent
          args:
            - create
            - --host=ingress-nginx-system-controller-admission,ingress-nginx-system-controller-admission.ingress-nginx-system.svc
            - --namespace=ingress-nginx-system
            - --secret-name=ingress-nginx-system-admission
            - --kubeconfig=/etc/kubernetes/kubeconfig
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-system-admission
      volumes:
      - name: ingress-nginx-system-admission-token
        secret:
          defaultMode: 420
          secretName: ingress-nginx-system-admission-token
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ingress-nginx-system-admission-patch
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/component: admission-webhook
  namespace: ingress-nginx-system
spec:
  template:
    metadata:
      name: ingress-nginx-system-admission-patch
      labels:
        app.kubernetes.io/name: ingress-nginx-system
        app.kubernetes.io/instance: ingress-nginx-system
        app.kubernetes.io/component: admission-webhook
    spec:
      containers:
        - name: patch
          image: k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660
          imagePullPolicy: IfNotPresent
          volumeMounts:
          - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            name: ingress-nginx-system-admission-token

          args:
            - patch
            - --webhook-name=ingress-nginx-system-admission
            - --namespace=ingress-nginx-system
            - --patch-mutating=false
            - --secret-name=ingress-nginx-system-admission
            - --patch-failure-policy=Fail
            - --kubeconfig=/etc/kubernetes/kubeconfig
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-system-admission
      volumes:
      - name: ingress-nginx-system-admission-token
        secret:
          defaultMode: 420
          secretName: ingress-nginx-system-admission-token      
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/component: controller
  name: ingress-nginx-system-controller
  namespace: ingress-nginx-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx-system
      app.kubernetes.io/instance: ingress-nginx-system
      app.kubernetes.io/component: controller
  revisionHistoryLimit: 10
  minReadySeconds: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx-system
        app.kubernetes.io/instance: ingress-nginx-system
        app.kubernetes.io/component: controller
    spec:
      dnsPolicy: ClusterFirst
      containers:
        - name: controller
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.33.0
          imagePullPolicy: IfNotPresent

          lifecycle:
            preStop:
              exec:
                command:
                  - /wait-shutdown
          args:
            - /nginx-ingress-controller
            - --publish-service=ingress-nginx-system/ingress-nginx-system-controller
            - --election-id=ingress-controller-leader
            - --ingress-class=nginx-system
            - --configmap=ingress-nginx-system/ingress-nginx-system-controller
            - --validating-webhook=:8443
            - --validating-webhook-certificate=/usr/local/certificates/cert
            - --validating-webhook-key=/usr/local/certificates/key
            - --tcp-services-configmap=ingress-nginx-system/tcp-services

          securityContext:
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            runAsUser: 101
            allowPrivilegeEscalation: true
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: webhook
              containerPort: 8443
              protocol: TCP
          volumeMounts:
            - name: webhook-cert
              mountPath: /usr/local/certificates/
              readOnly: true
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: ingress-nginx-system-token
          resources:
            requests:
              cpu: 100m
              memory: 90Mi
            limits:
              cpu: 200m
              memory: 180Mi
      serviceAccountName: ingress-nginx-system
      terminationGracePeriodSeconds: 300
      volumes:
        - name: webhook-cert
          secret:
            secretName: ingress-nginx-system-admission
        - name: ingress-nginx-system-token
          secret:
            defaultMode: 420
            secretName: ingress-nginx-system-token
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx-system
    app.kubernetes.io/instance: ingress-nginx-system
    app.kubernetes.io/component: admission-webhook
  name: ingress-nginx-system-admission
  namespace: ingress-nginx-system
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      namespace: ingress-nginx-system
      name: ingress-nginx-system-controller-admission
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
      - v1
    operations:
      - CREATE
      - UPDATE
    resources:
      - ingresses
  sideEffects: None

    